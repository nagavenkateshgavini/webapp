
{"openapi": "3.0.1",
  "info": {
    "title": "Swagger docs for flask application",
    "description": "This is api documentation for flask app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "3.0.52"
  },
  "tags": [
    {
      "name": "public"
    },
    {
      "name": "authenticated"
    }
  ],
  "paths": {
    "/healthz": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Healthcheck endpoint",
        "operationId": "healthzget",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "server responds with 200 OK if it is healthy."
          },
          "503":{
            "description": "server responds with 503 if it is not healthy."
          }
        }
      },
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Healthcheck endpoint",
        "operationId": "healthzpost",
        "responses": {
          "405": {
            "description": "server responds with 405 Method Not Allowed"
          }
        }
      },
      "put": {
        "tags": [
          "public"
        ],
        "summary": "Healthcheck endpoint",
        "operationId": "healthzput",
        "responses": {
          "405": {
            "description": "server responds with 405 Method Not Allowed."
          }
        }
      },
       "delete": {
        "tags": [
          "public"
        ],
        "summary": "Healthcheck endpoint",
        "operationId": "healthzdelete",
        "responses": {
          "405": {
            "description": "server responds with 405 Method Not Allowed."
          }
        }
      },
       "head": {
        "tags": [
          "public"
        ],
        "summary": "Healthcheck endpoint",
        "operationId": "healthzhead",
        "responses": {
          "405": {
            "description": "server responds with 405 Method Not Allowed."
          }
        }
      },
       "options": {
        "tags": [
          "public"
        ],
        "summary": "Healthcheck endpoint",
        "operationId": "healthzoptions",
        "responses": {
          "405": {
            "description": "server responds with 405 Method Not Allowed."
          }
        }
      }},
    "/v1/user": {
      "post":{
      "tags": [
          "public"
        ],
        "summary": "create user",
        "operationId": "create user",

        "requestBody": {

            "content": {
              "application/json":{
              "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
        },
        "responses": {
          "201": {
            "description": "user created",
            "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example":{
                "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                "first_name": "Jane",
                "last_name": "Doe",
                "username": "jane.doe@example.com",
                "account_created": "2016-08-29T09:12:33.001Z",
                "account_updated": "2016-08-29T09:12:33.001Z"
                }
              }
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/v1/user/self":{
      "put": {
       "tags": [
         "authenticated"
        ],
        "summary": "update user info",
        "operationId": "update user",
        "requestBody": {
          "content": {
            "application/json":{
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "no content"
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "get": {
      "tags": [
          "authenticated"
        ],
        "summary": "Get user information",
        "operationId": "get user",
        "responses": {
          "200": {
            "description": "returns user info",
            "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example":{
                "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                "first_name": "Jane",
                "last_name": "Doe",
                "username": "jane.doe@example.com",
                "account_created": "2016-08-29T09:12:33.001Z",
                "account_updated": "2016-08-29T09:12:33.001Z"
                }
              }
            }
            }
          }
        }
      }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
           "id": {
            "title": "unique id",
            "type": "string",
            "description": "unique id",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
             "readOnly": true
          },
          "username": {
            "title": "username of the user",
            "type": "string",
            "description": "provide email id",
            "example": "jane.doe@example.com"

          },
          "password": {
            "type": "string",
            "description": "password of the user",
            "example": "123456789",
            "writeOnly": true
          },
          "first_name": {
            "type": "string",
            "description": "first name of the user",
            "example": "Jane"
          },
          "last_name": {
            "type": "string",
            "description": "last name of the user",
            "example": "Doe"
          },
          "account_created": {
            "type": "object",
            "description": "account creation time",
           "readOnly": true
          },
          "account_updated": {
            "type": "object",
            "description": "account updated time",
           "readOnly": true
          }
        }
      }
    }
  }
}
